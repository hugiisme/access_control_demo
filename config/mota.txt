Mô tả CSDL
1. Bảng users 
    Lưu thông tin người dùng hệ thống.
    Vì là demo nên cho chọn tài khoản để đăng nhập (chỉ cần chọn, không cần xử lý username, password)

2. Bảng actions 
    Các hành động có thể thực hiện được trên 1 tài nguyên/loại tài nguyên
    Ví dụ: Create, View, Edit, Delete,...

3. Bảng org_types 
    Ví dụ: Đoàn trường, Liên chi đoàn, Chi đoàn, Câu lạc bộ, Đội, Nhóm
    Chia ra làm 2 nhóm:
        Nhóm 1 (Đoàn trường, Liên chi đoàn, Chi đoàn): 
            Người dùng chỉ được tham gia duy nhất 1 tổ chức của loại này trong toàn hệ thống. 
            Đoàn trường tạo ra người dùng => Gán trực tiếp vào liên chi đoàn => Liên chi đoàn có thể phân bổ người dùng vào Chi đoàn (Cần xem xét lại cách làm này)
        Nhóm 2 (Câu lạc bộ, Đội, Nhóm):
            Người dùng được phép tham gia nhiều tổ chức của loại này trong toàn hệ thống 
            Người dùng yêu cầu vào hệ thống (Thêm data vào org_join_request) => Trường tổ chức duyệt thành viên vào tổ chức 
    
    => Đánh dấu những tổ chức thuộc loại 'Chỉ được tham gia 1' bằng is_exclusive (Nhóm 1 => is_exclusive = 1, Nhóm 2 => is_exclusive = 0)

4. Bảng organizations
    parent_org_id = id trỏ tới tổ chức cha (trực tiếp) của nó trong cùng bảng. NULL  nếu không có
    |id     |name                       |parent_org_id  |
    |1      |Trường ĐHSPHN              |NULL           |
    |2      |Liên chi đoàn Khoa CNTT    |1              |
    |3      |Chi đoàn K72E2             |2              |

    org_level là 'Cấp tương đương' trong trang 'Cấp - Vai trò' trong file 'Phân quyền'

5. Bảng resource_types
    Bảng loại tài nguyên, tên của loại tài nguyên tương ứng (tuyệt đối) với tên của các bảng trong csdl
    Ví dụ (users, org_types, organizations,...)
    Xem bảng 10. resources để hiểu tại sao tên cần chính xác tuyệt đối

6. Bảng permissions
    Permission = action + resource_type => Quyền = hành động + loại tài nguyên
    => Quyền áp dụng trên mọi tài nguyên thuộc loại tài nguyên này (trong scope cho phép)
    Ví dụ: Quyền 'xem' 'hoạt động' => Không cần biết là hoạt động gì, miễn là hoạt động là xem được

7. Bảng system_roles
    Vai trò trong từng tổ chức 
    available_slots = số vị trí trống còn lại. Tạo ra để tránh việc 1 tổ chức có 2 ông trưởng (Nếu cần)
    Nếu để là max_users thì mỗi lần check lại phải query tất cả người dùng đã có role đó và so sánh tổng số người dùng đã có => Tốn thời gian
    => Để available_slots: Mỗi lần gán role cho 1 user thì available_slots -= 1

8. Bảng user_resource_roles
    Bảng vai trò đối với 1 tài nguyên (của user)
    Ví dụ: Creator, Editor, Viewer, Deleter,...
    Mỗi vai trò gắn với 1 hành động cụ thể (Xem bảng 19. resource_role_actions)

9. Bảng org_resource_roles
    Bảng vai trò đối với tài nguyên (của tổ chức)
    Ví dụ: Owner, Collbaborator, Sharer,...
    Chưa quyết định xem có gắn với hành động hay không 

10. Bảng resources 
    Bảng tài nguyên. Là bảng trung gian giữa vai trò và bảng thực thể thực tế 
    org_id: Tổ chức sở hữu tài nguyên này 
    resource_type_id: Loại tài nguyên 
    entity_id: id trong bảng thực tế 
    => Ví dụ resource_type = 'actions', entity_id = 1 => trỏ tới id 1 trong bảng actions (đây là lý do resource_types cần tên chuẩn)
    Mỗi khi tạo 1 data mới trong bảng bất kì thì nó phải có 1 bản sao lưu trong bảng này (Mọi bảng cho phép người dùng hệ thống tham gia chỉnh sửa)
    => Tóm lại: tạo bất kì data gì trong bảng nào cũng phải có 1 resource của nó 

11. Bảng policy_condition_groups
    parent_group_id trỏ tới id cha trực tiếp của nó trong cùng bảng
    operator:
        Ví dụ: AND, OR 
        Áp dụng cho mọi nhóm điều kiện con:
            Ví dụ: Nếu có 3 nhóm A, B, C và nhóm cha của chúng có operator = OR thì biểu thức là (A or B or C)

12. Bảng policies
    Chính sách (hay ngoại lệ) đặc biệt của riêng 1 tài nguyên nào đó (giống quyền nhưng là ngoại lệ gắn riêng chứ không toàn cục)
    Policy = action + resource_id + condition (Cho phép thực hiện action trên resource có id = resource_id  nếu thỏa mãn condition)
    Ví dụ hoạt động 1 yêu cầu chi cho phép xem nếu người dùng là con trai và trên 18 tuổi
    Policy = View + Activity_1 + ((user.gender == 'Boy') && (user.age >= 18))

13. Bảng policy_conditions
    Lưu điều kiện so sánh attributes với value
    attributes + operator + value
    user.age       >=        18
    (Cần tìm cách so sánh attributes với attributes + Chốt danh sách attributes cần có)

14. Bảng system_role_groups
    Nhóm vai trò
    Ví dụ: Ban thường trực, Ban thường vụ, Ban chấp hành, Thành viên
    parent_group_id: Nhóm cha trực tiếp của nó trỏ tới chính bảng system_role_groups

15. Bảng org_permissions
    Mỗi tổ chức sẽ có 1 túi/set quyền để phân vào các vai trò, nhóm vai trò (xem xét lại phân vào nhóm vai trò hay ko) hoặc túi/set quyền của tổ chức con

16. Bảng user_org
    Bảng liên kết người dùng - tổ chức, để query nhanh danh sách người dùng trong 1 tổ chức + buộc phải tồn tại vì có org_join_request

17. Bảng resource_relation_types
    Các loại quan hệ giữa các tài nguyên với nhau: Cha - con, Hoạt động - Minh chứng, File - Folder

18. Bảng resource_relations 
    Bảng lưu liên kết quan hệ giữa các tài nguyên với nhau 

19. Bảng resource_role_actions
    Bảng gắn quan hệ giữa user_resource_role và actions (Cần xem xét làm thêm với org_resource_roles)
    Ví dụ: Role Creator gắn với hành động Create, Role Editor gắn với hành động Edit 

20. Bảng action_relations
    Bảng quan hệ giữa các action
    Những hành động yêu cầu tiên quyết của nhau (Để có thể thực hiện hành động Edit thì trước hết phải thực hiện được hành động View)

21. Bảng system_role_permissions
    Bảng quan hệ giữa system_Role và permissions 
    Áp dụng logic trong bảng permission => Nếu 1 người thuộc tổ chức 'Liên Chi Đoàn' có quyền 'Edit' loại tài nguyên 'Hoạt động' thì quyền này được áp dụng với tất cả tài nguyên có loại 'Hoạt động' thuộc nhánh tổ chức 'Liên chi đoàn' của họ đổ xuống (tới chi đoàn, câu lạc bộ, đội, nhóm, nói chung là tổ chức con)

22. Bảng user_resources
    Bảng quan hệ giữa người dùng và tài nguyên, chỉ rõ 'Ai' 'Có vai trò gì' 'Đối với tài nguyên nào'

23. Bảng org_resources
    Lưu thông tin tài nguyên là thuộc tổ chức nào 
    (Hơi thừa vì resources đã có org_id nhưng để phòng trường hợp 1 tài nguyên có 2 tổ chức cùng sở hữu hay gì đó)

24. Bảng user_system_roles
    Bảng quan hệ người dùng và vai trò trong hệ thống

25. Bảng system_role_group_roles
    Bảng gắn vai trò hệ thống vào trong nhóm vai trò 
    => Vai trò bí thư liên chi đoàn nằm trong nhóm vai trò 'Ban thường trực Liên chi đoàn'

26. Bảng user_permission_snapshots
    Bảng trải phẳng, lưu hết thông tin từ các bảng khác để tránh việc phải query quan hệ đa tầng
    Lưu thông tin khi đăng nhập và xóa thông tin khi đăng xuất (tránh nặng bộ nhớ, không lưu vào session vì serialize nặng)

27. Bảng org_join_request 
    Bảng lưu thông tin chờ duyệt vào tổ chức đối với các tổ chức thuộc loại Câu lạc bộ, Đội, Nhóm

28. Bảng system_role_group_permissions
    Bảng lưu các quyền của nhóm vai trò 